#!/usr/bin/env groovy

library identifier: 'jenkins-shared-library@master', retriever: modernSCM(
[$class: 'GitSCMSource',
 remote: 'https://github.com/josmbrio/jenkins-shared-library.git',
 credentialsId: 'gitlab-credentials'
]
)

pipeline {
        agent any
        tools {
            maven 'maven-3.8.6'   // Con esto maven estara disponible en todo el pipeline.
                            // El nombre debe ser igual al nombre configurado en la Configuracion Global de Jenkins
        }
        environment {
            IMAGE_NAME = 'josmbrio/my-repo:jmaNEW-2.0'
            SERVER_DEPLOY_KEY = 'deploy-server-key'
            SERVER_LOGIN = 'josmbrio@192.168.56.101'
        }
        stages {
            stage("build app") {
                steps {
                    script {
                        echo "building application jar..."
                        buildJar()
                    }
                }
            }
            stage("build image") {
                steps {
                    script {
                        buildImage(env.IMAGE_NAME)
                        dockerLogin()
                        dockerPush(env.IMAGE_NAME)
                    }
                }
            }
            stage("deploy") {
                steps {
                    script {
                        echo "deploying docker image to EC2 or localserver"
                        def dockerComposeCmd = 'docker-compose -f docker-compose.yaml up -d'
                        
                        sshagent(["${SERVER_DEPLOY_KEY}"])  {
                            sh "scp docker-compose.yaml ${SERVER_LOGIN}:/home/josmbrio/"
                            sh "ssh -o StrictHostKeyChecking=no ${SERVER_LOGIN}	${dockerComposeCmd}"
                        }
                    }
                }
            }
        }
}
