#!/usr/bin/env groovy

pipeline {
        agent any
        tools {
            maven 'maven-3.8.6'   // Con esto maven estara disponible en todo el pipeline.
                            // El nombre debe ser igual al nombre configurado en la Configuracion Global de Jenkins
        }
        stages {
            stage("increment version") {
                steps {
                    script {
                        echo "incrementing app version"
                        sh 'mvn build-helper:parse-version versions:set \
                            -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} \
                            versions:commit'
                        def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
                        def version = matcher[0][1]
                        env.IMAGE_NAME = "$version-$BUILD_NUMBER"
                    }
                }
            }

            stage("build app") {
                steps {
                    script {
                        echo "building the application"
                        sh 'mvn clean package'
                    }
                }
            }
            stage("build image") {
                steps {
                    script {
                        echo "building the application"
                        withCredentials([usernamePassword(credentialsId: 'docker-hub-repo', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                            sh "docker build -t josmbrio/my-repo:${IMAGE_NAME} ."
                            sh "echo $PASS | docker login -u $USER --password-stdin"
                            sh "docker push josmbrio/my-repo:${IMAGE_NAME}"
                        }
                    }
                }
            }
            stage("deploy") {
                steps {
                    script {
                        echo 'deploying the application...'
                    }
                }
            }
            stage("commit version update") {
                steps {
                    script {
                        withCredentials([usernamePassword(credentialsId: 'gitlab-credentials', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                            sh 'git config user.email "josmbrio@gmail.com"'
                            sh 'git config user.name "josmbrio"'

                            sh 'git status'
                            sh 'git branch'
                            sh 'git config --list'

                            sh 'git remote set-url origin https://${USER}:${PASS}@192.168.100.6/josmbrio/java-maven-app.git'
                            sh 'git add .'
                            sh 'git commit -m "This is from Jenkins version bump"'
                            sh 'git push origin HEAD:jenkins-job2'
                        }
                    }
                }
            }
        }
}
