pipeline {

  agent any

  tools {
            maven 'maven-3.8.6'   // Con esto maven estara disponible en todo el pipeline.
                            // El nombre debe ser igual al nombre configurado en la Configuracion Global de Jenkins
        }
  environment {
      REPO_SERVER: '178762446524.dkr.ecr.us-east-1.amazonaws.com'
      REPO_URL: "${REPO_SERVER}/java-maven-app"
  }

  stages {
    
    stage("increment version") {
      steps {
          script {
              echo "incrementing app version"
              sh 'mvn build-helper:parse-version versions:set \
                            -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} \
                            versions:commit'
              def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
              def version = matcher[0][1]
              env.IMAGE_NAME = "$version-$BUILD_NUMBER"
          }
      }
    }

    stage("build app") {
      
      steps {
          script {
            echo 'Building the application...'
            sh 'mvn clean package'
          }
      }
    }

    stage("build image") {
      steps {
        script {
          echo "building the application"
          withCredentials([usernamePassword(credentialsId: 'ecr-credentials', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
            sh "docker build -t ${REPO_URL}:${IMAGE_NAME} ."
            sh "echo $PASS | docker login -u $USER --password-stdin ${REPO_SERVER}"
            sh "docker push ${REPO_URL}:${IMAGE_NAME}"
          }
        }
      }
    }
    
    stage("deploy") {
      environment {
        AWS_ACCESS_KEY_ID = credentials('jenkins_aws_access_key_id')
        AWS_SECRET_ACCESS_KEY = credentials('jenkins_aws_secret_access_key')
        APP_NAME = 'java-maven-app'
      }
      steps {
        script {
          echo 'Deploying the application...'
          sh 'envsubst < ./kubernetes/deployment.yaml | kubectl apply -f -'
          sh 'envsubst < ./kubernetes/service.yaml | kubectl apply -f -'
        }
      }
    }

    stage("commit version update") {
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'gitlab-credentials', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
            sh 'git config user.email "jenkins@example.com"'
            sh 'git config user.name "jenkins"'
            sh 'git remote set-url origin https://${USER}:${PASS}@myserver/josmbrio/java-maven-app.git'
            sh 'git add .'
            sh 'git commit -m "This is from Jenkins version bump"'
            sh 'git push origin HEAD:deploy-to-lke'
          }
        }
      }
    }
  }
}

